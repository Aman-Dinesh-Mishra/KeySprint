{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aman9\\\\OneDrive\\\\Desktop\\\\TYPESPEED\\\\Typing-Speed-Test-React\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleText = `The quick brown fox jumps over the lazy dog. This is a test to measure how fast you can type within 30 seconds. Typing speed is measured in words per minute (WPM).To improve your speed, practice typing regularly. \nAccuracy is just as important as speed, so focus on both.`;\nconst TypingSpeedTest = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [isTyping, setIsTyping] = useState(false);\n  const [wpm, setWpm] = useState(0);\n  const [highlightedText, setHighlightedText] = useState([]);\n  const calculateWPM = useCallback(() => {\n    const wordsTyped = inputText.trim().split(/\\s+/).length;\n    setWpm(Math.round(wordsTyped * 60 / 30));\n  }, [inputText]);\n  useEffect(() => {\n    let timer;\n    if (isTyping && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      clearInterval(timer);\n      calculateWPM();\n    }\n    return () => clearInterval(timer);\n  }, [isTyping, timeLeft, calculateWPM]);\n  const handleInputChange = e => {\n    if (!isTyping) setIsTyping(true);\n    const userInput = e.target.value;\n\n    // ✅ Ensure text updates properly\n    setInputText(userInput);\n    setHighlightedText(validateText(userInput));\n  };\n  const validateText = input => {\n    return input.split(\"\").map((char, index) => ({\n      char,\n      correct: sampleText[index] === char\n    }));\n  };\n  const resetTest = () => {\n    setInputText(\"\");\n    setTimeLeft(30);\n    setIsTyping(false);\n    setWpm(0);\n    setHighlightedText([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typing-test-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"typing-test-heading\",\n      children: \"Typing Speed Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"typing-test-text\",\n      children: sampleText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-text-display\",\n      children: highlightedText.map((charObj, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: charObj.correct ? \"typing-text-correct\" : \"typing-text-wrong\",\n        children: charObj.char\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"typing-textarea\",\n      value: inputText,\n      onChange: handleInputChange,\n      disabled: timeLeft === 0,\n      placeholder: \"Start typing here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"typing-timer\",\n      children: [\"Time Left: \", timeLeft, \" sec\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), timeLeft === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"typing-speed\",\n      children: [\"Your Typing Speed: \", wpm, \" WPM\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"typing-restart-button\",\n      onClick: resetTest,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(TypingSpeedTest, \"9dvLMsDJdthAG12DIuSvxSlSy6o=\");\n_c = TypingSpeedTest;\nexport default TypingSpeedTest;\nvar _c;\n$RefreshReg$(_c, \"TypingSpeedTest\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","sampleText","TypingSpeedTest","_s","inputText","setInputText","timeLeft","setTimeLeft","isTyping","setIsTyping","wpm","setWpm","highlightedText","setHighlightedText","calculateWPM","wordsTyped","trim","split","length","Math","round","timer","setInterval","prevTime","clearInterval","handleInputChange","e","userInput","target","value","validateText","input","map","char","index","correct","resetTest","className","children","fileName","_jsxFileName","lineNumber","columnNumber","charObj","onChange","disabled","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aman9/OneDrive/Desktop/TYPESPEED/Typing-Speed-Test-React/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst sampleText = `The quick brown fox jumps over the lazy dog. This is a test to measure how fast you can type within 30 seconds. Typing speed is measured in words per minute (WPM).To improve your speed, practice typing regularly. \r\nAccuracy is just as important as speed, so focus on both.`;\r\n\r\nconst TypingSpeedTest = () => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [wpm, setWpm] = useState(0);\r\n  const [highlightedText, setHighlightedText] = useState([]);\r\n\r\n  const calculateWPM = useCallback(() => {\r\n    const wordsTyped = inputText.trim().split(/\\s+/).length;\r\n    setWpm(Math.round((wordsTyped * 60) / 30));\r\n  }, [inputText]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isTyping && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0) {\r\n      clearInterval(timer);\r\n      calculateWPM();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isTyping, timeLeft, calculateWPM]);\r\n\r\n  const handleInputChange = (e) => {\r\n    if (!isTyping) setIsTyping(true);\r\n    const userInput = e.target.value;\r\n\r\n    // ✅ Ensure text updates properly\r\n    setInputText(userInput);\r\n    setHighlightedText(validateText(userInput));\r\n  };\r\n\r\n  const validateText = (input) => {\r\n    return input.split(\"\").map((char, index) => ({\r\n      char,\r\n      correct: sampleText[index] === char,\r\n    }));\r\n  };\r\n\r\n  const resetTest = () => {\r\n    setInputText(\"\");\r\n    setTimeLeft(30);\r\n    setIsTyping(false);\r\n    setWpm(0);\r\n    setHighlightedText([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"typing-test-container\">\r\n      <h2 className=\"typing-test-heading\">Typing Speed Test</h2>\r\n      <p className=\"typing-test-text\">{sampleText}</p>\r\n\r\n      <div className=\"typing-text-display\">\r\n        {highlightedText.map((charObj, index) => (\r\n          <span\r\n            key={index}\r\n            className={\r\n              charObj.correct ? \"typing-text-correct\" : \"typing-text-wrong\"\r\n            }\r\n          >\r\n            {charObj.char}\r\n          </span>\r\n        ))}\r\n      </div>\r\n\r\n      <textarea\r\n        className=\"typing-textarea\"\r\n        value={inputText}\r\n        onChange={handleInputChange}\r\n        disabled={timeLeft === 0}\r\n        placeholder=\"Start typing here...\"\r\n      />\r\n\r\n      <h3 className=\"typing-timer\">Time Left: {timeLeft} sec</h3>\r\n      {timeLeft === 0 ? (\r\n        <h3 className=\"typing-speed\">Your Typing Speed: {wpm} WPM</h3>\r\n      ) : null}\r\n\r\n      <button className=\"typing-restart-button\" onClick={resetTest}>\r\n        Restart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingSpeedTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}